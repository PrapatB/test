version: 2
jobs:
  build:
    docker:
      # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
      - image: circleci/golang:1.10.1
    working_directory: ~/ndid/test
    steps:
      - checkout
      - run:
          name: Install Node.js
          command: curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash - && sudo apt-get install -y nodejs
      - run:
          name: Install Tendermint ABCI
          command: go get github.com/tendermint/abci/cmd/abci-cli
      - run:
          name: Install Tendermint
          command: |
            wget https://github.com/tendermint/tendermint/releases/download/v0.16.0/tendermint_0.16.0_linux_amd64.zip
            unzip tendermint_0.16.0_linux_amd64.zip
            sudo install tendermint /usr/local/bin
      - run:
          name: Install Yarn
          command: |
            curl -o- -L https://yarnpkg.com/install.sh | bash
      - run:
          name: Install test dependencies
          command: |
            ~/.yarn/bin/yarn --frozen-lockfile
      - run:
          name: Create logs directory
          command: |
            mkdir -p ~/logs

      - run: git clone https://github.com/ndidplatform/smart-contract.git /go/src/github.com/ndidplatform/smart-contract
      - run:
          name: 'Install smart-contract dependencies (todo: use a dep management solution?)'
          command: |
            go get github.com/fatih/color
      - run: git clone https://github.com/ndidplatform/api.git ~/ndid/api
      - run:
          name: 'Install api dependencies'
          command: |
            npm install

      #region Start IDP node
      - run:
          name: idp-abci
          command: |
            (
              cd /go/src/github.com/ndidplatform/smart-contract
              CALLBACK_URI=http://localhost:3000/callback go run abci/server.go tcp://127.0.0.1:46000
            ) 2>&1 | tee -a ~/logs/idp-abci.log
          background: true
      - run:
          name: idp-tendermint
          command: |
            (
              cd /go/src/github.com/ndidplatform/smart-contract
              tendermint --home ./config/tendermint/IdP unsafe_reset_all
              tendermint --home ./config/tendermint/IdP node --consensus.create_empty_blocks=false
            ) 2>&1 | tee -a ~/logs/idp-tendermint.log
          background: true
      - run: node waitForLog --file=~/logs/idp-abci.log --text=Commit --count=2
      #endregion
      #region Start RP node
      - run:
          name: rp-abci
          command: |
            (
              cd /go/src/github.com/ndidplatform/smart-contract
              CALLBACK_URI=http://localhost:3001/callback go run abci/server.go tcp://127.0.0.1:46001
            ) 2>&1 | tee -a ~/logs/rp-abci.log
          background: true
      - run:
          name: rp-tendermint
          command: |
            (
              cd /go/src/github.com/ndidplatform/smart-contract
              tendermint --home ./config/tendermint/RP unsafe_reset_all
              tendermint --home ./config/tendermint/RP node --consensus.create_empty_blocks=false
            ) 2>&1 | tee -a ~/logs/rp-tendermint.log
          background: true
      - run: node waitForLog --file=~/logs/rp-abci.log --text=Commit --count=2
      #endregion

      #region Start IDP API
      - run:
          name: idp-api
          command: |
            cd ~/ndid/api
            ROLE=idp \
            MQ_CONTACT_IP=127.0.0.1 \
            MQ_BINDING_PORT=5555 \
            ABCI_APP_CALLBACK_PORT=3000 \
            SERVER_PORT=8080 \
            npm start
          background: true
      - run:
          name: rp-api
          command: |
            cd ~/ndid/api
            ROLE=rp \
            ABCI_APP_CALLBACK_PORT=3001 \
            MQ_CONTACT_IP=127.0.0.1 \
            MQ_BINDING_PORT=5556 \
            SERVER_PORT=8081 \
            npm start
          background: true
      - run: node waitForLog --file=~/logs/idp-abci.log --text=Commit --count=3
      - run: node waitForLog --file=~/logs/rp-abci.log --text=Commit --count=3
      #endregion

      #region Post-test
      - store_artifacts:
          path: ~/logs
          destination: logs
      #endregion
